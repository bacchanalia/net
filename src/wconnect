#!/usr/bin/perl
use strict;
use warnings;

my $wpaDriver = 'nl80211';
my $wpaConf = '/tmp/wpa_supplicant.conf';
my $winfoExec = 'winfo';
my $modeDefault = 'managed';
my $wifiModule = 'iwlagn';

my $dev = `ifdev wlan`;
chomp $dev;

my $usage = "Usage: \n"
  . "$0 -h|--help\n"
  . "   show this message\n"
  . "$0 SSID\n"
  . "   look up SSID with $winfoExec and use that enc method, key, and mode\n"
  . "$0 SSID none [mode]\n"
  . "   use no enc method or key {mode defaults to '$modeDefault'}\n"
  . "$0 SSID wpa key [mode]\n"
  . "   use given WPA PSK/TKIP {mode defaults to '$modeDefault'}\n"
  . "$0 SSID wep key [mode]\n"
  . "   use given WEP key {mode defaults to '$modeDefault'}\n"
  . "   note that ascii wep keys start with 's:', e.g.: s:APLEANDBANANA\n"
  . "$0 -d\n"
  . "   disconnect\n"
  ;

die $usage if(@ARGV == 1 and $ARGV[0] =~ /^(-h|--help)$/);

if(`whoami` ne "root\n"){
  print STDERR "rerunning as root...\n";
  exec "sudo", "$0", @ARGV;
}

sub run(@){
  print "exec: @_\n";
  system @_;
}

sub reloadModule(){
  print "\n\nreloading $wifiModule as a workaround\n";
  run "modprobe", "-r", $wifiModule;
  run "modprobe", $wifiModule;
  run "sleep 0.5";
  print "\n\n";
}

sub ifup(){
  run "ifconfig", $dev, "down";
}
sub ifdown(){
  run "ifconfig", $dev, "down";
}

sub connectWifi($$$$){
  my ($ssid, $encType, $key, $mode) = @_;
  if(lc $encType eq 'wpa'){
    my $conf = ''
      . "network={\n"
      . "  ssid=\"$ssid\"\n"
      . "  psk=\"$key\"\n"
      . "}\n"
    ;
    run "rm", $wpaConf;
    print "writing $wpaConf:\n$conf\n";
    open FH, "> $wpaConf" or die "Couldn't write $wpaConf: $!\n";
    print FH $conf;
    close FH;
    run "ifconfig", $dev, "up";
    run "wpa_supplicant", "-B", "-D$wpaDriver", "-i$dev", "-c$wpaConf";
    run "sleep", "1";
  }elsif(lc $encType eq 'wep'){
    if($mode =~ /ad-hoc/){
      reloadModule();
    }
    my @iwconfig = ("iwconfig", $dev,
      "essid", $ssid,
      "key", $key,
      "channel", "auto",
      "mode", $mode
    );
    print "\n\nrunning iwconfig while its down-\n";
    ifdown();
    run @iwconfig;
    print "running iwconfig while its up-\n";
    ifup();
    run @iwconfig;
    print "\n\n";
  }elsif(lc $encType eq 'none'){
    run "ifconfig", $dev, "up";
    run "iwconfig", $dev,
      "essid", $ssid,
      "channel", "auto",
      "mode", $mode;
  }

  run "resolv";
  run "dhclient", "$dev";
}
sub disconnectWifi(){
  run "killall", "wpa_supplicant", "dhclient";
}

sub main(@){
  die $usage if @_ > 4;
  if(@_ == 1 and $_[0] eq '-d'){
    disconnectWifi;
    exit 0;
  }
  my ($ssid, $encType, $key, $mode);
  if(@_ == 1){
    my $ssidArg = shift;
    my $winfo = `$winfoExec $ssidArg`;
    if($winfo =~ /ssid:(.*)\nenc:(.*)\nkey:(.*)\nmode:(.*)\nauto:(.*)\n/){
      ($ssid, $encType, $key, $mode) = ($1, $2, $3, $4);
      if($ssid ne $ssidArg){
        print "using '$ssid' instead of '$ssidArg'\n";
      }
    }else{
      die "Unknown SSID: $ssidArg\n";
    }
  }elsif(@_ <= 4){
    ($ssid, $encType, $key, $mode) = @_;
    die $usage if not defined $ssid or not defined $encType;
    
    $mode = $modeDefault if not defined $mode;
    
    $encType = lc $encType;
    if($encType eq 'none'){
      die $usage if defined $key;
    }elsif($encType =~ /^(wpa|wep)$/){
      die $usage if not defined $key;
    }else{
      die $usage;
    }
  }else{
    die $usage;
  }

  disconnectWifi;
  connectWifi $ssid, $encType, $key, $mode;
}
&main(@ARGV);
