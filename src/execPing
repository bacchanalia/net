#!/usr/bin/perl
use strict;
use warnings;

sub attemptPing($$$$);

my $defaultDeadline = 1;
my $defaultDelay = 1;
my $defaultTimeout = 0;
my $defaultAttempts = 0;

my $usage = "Usage:
  $0 [OPTS] URL --test
    Tests if URL is ping-able. Prints \"ok: URL\" or \"failed: URL\"

  $0 [OPTS] URL EXEC [ARG ARG ..]
    Ensure that URL is ping-able before running \"EXEC ARG ARG ..\"

  OPTS:
    --deadline=INTEGER     {default is $defaultDeadline}
      seconds to wait for a response for each ping

    --delay=INTEGER        {default is $defaultDelay}
      seconds to wait between failed pings

    --timeout=INTEGER      {default is $defaultTimeout}
      seconds to wait before failing, 0 means forever

    --attempts=INTEGER     {default is $defaultAttempts}
      number of times to attempt a ping, 0 means forever

    --ipmagic
      interpret URL as an ipmagic conf, and use `ipmagic URL --ip` as the url
      also, if the IP is not ping-able, tries SSH as a fallback

    -q|--quiet
      print less to STDOUT and STDERR
";

sub main(@){
  my ($deadline, $delay, $timeout, $attempts) =
    ($defaultDeadline, $defaultDelay, $defaultTimeout, $defaultAttempts);
  my $quiet = 0;
  my $useIpmagic = 0;
  while(@_ > 0 and $_[0] =~ /^-/){
    my $opt = shift;
    if($opt =~ /^--deadline=(\d+)$/){
      $deadline = $1;
    }elsif($opt =~ /^--delay=(\d+)$/){
      $delay = $1;
    }elsif($opt =~ /^--timeout=(\d+)$/){
      $timeout = $1;
    }elsif($opt =~ /^--attempts=(\d+)$/){
      $attempts = $1;
    }elsif($opt =~ /^--ipmagic$/){
      $useIpmagic = 1;
    }elsif($opt =~ /^(-q|--quiet)$/){
      $quiet = 1;
    }else{
      die $usage;
    }
  }

  my $url = shift;
  my $test = shift if @_ == 1 and $_[0] =~ /^(--test)$/;
  my $exec = shift;
  my @args = @_;

  die $usage if not defined $url or (not defined $exec and not defined $test);

  my $start = time;
  my $count = 0;
  while(not attemptPing $url, $useIpmagic, $deadline, $quiet){
    $count++;
    my $isTimeout = $timeout > 0 && time - $start > $timeout;
    my $isMaxAttempts = $attempts > 0 && $count >= $attempts;
    if($isTimeout or $isMaxAttempts){
      if(defined $test){
        print "failed: $url\n";
        exit 1;
      }else{
        die "timeout reached, exiting\n";
      }
    }
    print STDERR "ping failed, retrying...\n" if not $quiet;
    sleep $delay;
  }

  if(defined $test){
    print "ok: $url\n";
    exit 0;
  }else{
    exec $exec, @args;
  }
}

sub attemptPing($$$$){
  my ($url, $useIpmagic, $deadline, $quiet) = @_;
  my $ipmagicConf;
  if($useIpmagic){
    $ipmagicConf = $url;
    $url = `ipmagic "$ipmagicConf" --ip`;
    chomp $url;
    print "Using \"$url\"\n" if not $quiet;
  }
  $url =~ s/'/'\\''/g;
  system "ping -c 1 -w $deadline -W $deadline '$url' >/dev/null 2>/dev/null";
  my $success = $? == 0;
  if(not $success and $useIpmagic){
    system "ipmagic", $ipmagicConf, "echo ssh $ipmagicConf success!\n";
    $success = $? == 0;
  }
  return $success;
}

&main(@ARGV);
